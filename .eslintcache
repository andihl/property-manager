[{"/Users/gogo/dev/repos/property-manager/src/containers/Contact/ContractEdit.tsx":"1","/Users/gogo/dev/repos/property-manager/src/components/Contract/ContractForm.tsx":"2","/Users/gogo/dev/repos/property-manager/src/index.tsx":"3","/Users/gogo/dev/repos/property-manager/src/containers/App.tsx":"4","/Users/gogo/dev/repos/property-manager/src/containers/Contact/ContractList.tsx":"5","/Users/gogo/dev/repos/property-manager/src/containers/OperatingCosts/OperatingCostList.tsx":"6","/Users/gogo/dev/repos/property-manager/src/containers/Flat/FlatList.tsx":"7","/Users/gogo/dev/repos/property-manager/src/containers/Tenant/TenantList.tsx":"8","/Users/gogo/dev/repos/property-manager/src/components/PageLayout/PageLayout.tsx":"9","/Users/gogo/dev/repos/property-manager/src/components/Flat/FlatForm.tsx":"10"},{"size":609,"mtime":1607414193401,"results":"11","hashOfConfig":"12"},{"size":6203,"mtime":1607431546364,"results":"13","hashOfConfig":"12"},{"size":230,"mtime":1607090623862,"results":"14","hashOfConfig":"12"},{"size":1983,"mtime":1607413879644,"results":"15","hashOfConfig":"12"},{"size":2140,"mtime":1607428686977,"results":"16","hashOfConfig":"12"},{"size":178,"mtime":1607087484000,"results":"17","hashOfConfig":"12"},{"size":1929,"mtime":1607353686564,"results":"18","hashOfConfig":"12"},{"size":1839,"mtime":1607350031441,"results":"19","hashOfConfig":"12"},{"size":1095,"mtime":1607415239724,"results":"20","hashOfConfig":"12"},{"size":2865,"mtime":1607432574547,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"173910o",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gogo/dev/repos/property-manager/src/containers/Contact/ContractEdit.tsx",["44","45"],"import React, { ReactElement } from 'react'\nimport { useParams } from 'react-router-dom';\nimport ContractForm from '../../components/Contract/ContractForm';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport api, { useApi } from '../../shared/api';\nimport Contract from '../../types/Contract';\n\nconst ContractEdit = (): ReactElement => {\n    const params = useParams<{ id: string }>();\n    const { obj: contract, loading } = useApi<Contract>('GET', `/contract/${params.id}`);\n\n    if (loading) return <Spinner />\n\n    return <ContractForm contract={contract} />\n}\n\nexport default ContractEdit;",[],"/Users/gogo/dev/repos/property-manager/src/components/Contract/ContractForm.tsx",["46","47"],"/Users/gogo/dev/repos/property-manager/src/index.tsx",[],"/Users/gogo/dev/repos/property-manager/src/containers/App.tsx",[],"/Users/gogo/dev/repos/property-manager/src/containers/Contact/ContractList.tsx",[],"/Users/gogo/dev/repos/property-manager/src/containers/OperatingCosts/OperatingCostList.tsx",[],"/Users/gogo/dev/repos/property-manager/src/containers/Flat/FlatList.tsx",[],"/Users/gogo/dev/repos/property-manager/src/containers/Tenant/TenantList.tsx",[],"/Users/gogo/dev/repos/property-manager/src/components/PageLayout/PageLayout.tsx",[],"/Users/gogo/dev/repos/property-manager/src/components/Flat/FlatForm.tsx",[],{"ruleId":"48","severity":1,"message":"49","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":11},{"ruleId":"52","severity":1,"message":"49","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":11},{"ruleId":"53","severity":1,"message":"54","line":14,"column":60,"nodeType":"55","messageId":"56","endLine":14,"endColumn":63,"suggestions":"57"},{"ruleId":"53","severity":1,"message":"54","line":21,"column":54,"nodeType":"55","messageId":"56","endLine":21,"endColumn":57,"suggestions":"58"},"no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["59","60"],["61","62"],{"messageId":"63","fix":"64","desc":"65"},{"messageId":"66","fix":"67","desc":"68"},{"messageId":"63","fix":"69","desc":"65"},{"messageId":"66","fix":"70","desc":"68"},"suggestUnknown",{"range":"71","text":"72"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"71","text":"73"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"74","text":"72"},{"range":"74","text":"73"},[579,582],"unknown","never",[832,835]]